<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About Podcasts v</value>
  </data>
  <data name="AddToLibraryCategoryLabel.Text" xml:space="preserve">
    <value>Category:</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CastFiles" xml:space="preserve">
    <value>Podcasts files</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="Confirm_PodcastDelete" xml:space="preserve">
    <value>Are you sure you want to remove this podcast from your library?</value>
  </data>
  <data name="Country.Text" xml:space="preserve">
    <value>Preferred language for podcasts:</value>
  </data>
  <data name="DownloadButton.Content" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="Empty.Text" xml:space="preserve">
    <value>It's a little bit empty here...
Please do a search to find podcasts</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Error_LoadFromFile" xml:space="preserve">
    <value>Unable to load specified file</value>
  </data>
  <data name="Error_SaveToFile" xml:space="preserve">
    <value>Unable to save to specified file</value>
  </data>
  <data name="Error_UnableToParseRSS" xml:space="preserve">
    <value>Unable to parse RSS</value>
  </data>
  <data name="GotIt.Content" xml:space="preserve">
    <value>Start Podcasts</value>
  </data>
  <data name="LibraryLabel.Header" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="LibraryTitle.Text" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="Load.Content" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="MarkAsPlayedButton.Content" xml:space="preserve">
    <value>Mark as played</value>
  </data>
  <data name="MarkAsUnplayedButton.Content" xml:space="preserve">
    <value>Mark as unplayed</value>
  </data>
  <data name="MarketBox.PlaceholderText" xml:space="preserve">
    <value>Market (US, FR, ...)</value>
  </data>
  <data name="MyPodcastsMenu.Label" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="NoEpisode.Text" xml:space="preserve">
    <value>Podcasts is feeling alone.
You should play a podcast...</value>
  </data>
  <data name="NowPlayingMenu.Label" xml:space="preserve">
    <value>Now playing</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OptionsMenu.Label" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="OptionsTitle.Text" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="PlayButton.Content" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="Played.Text" xml:space="preserve">
    <value>played</value>
  </data>
  <data name="PublishedOn" xml:space="preserve">
    <value>Published on</value>
  </data>
  <data name="Save.Content" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SearchBox.PlaceholderText" xml:space="preserve">
    <value>Search keywords...</value>
  </data>
  <data name="SearchMenu.Label" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchTitle.Text" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SeeAll" xml:space="preserve">
    <value>All podcasts</value>
  </data>
  <data name="SeeOnlyUnPlayed" xml:space="preserve">
    <value>Unplayed</value>
  </data>
  <data name="Success_AddPodcastToLibrary" xml:space="preserve">
    <value>Podcast successfully added to the library</value>
  </data>
  <data name="Success_LoadFromFile" xml:space="preserve">
    <value>File loaded successfully</value>
  </data>
  <data name="Success_SaveToFile" xml:space="preserve">
    <value>File saved successfully</value>
  </data>
  <data name="Validate.Content" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="MarkAsPlayedMenu.Text" xml:space="preserve">
    <value>Mark as played</value>
  </data>
  <data name="DeletePodcastMenu.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="PodcastCategoryMenu.Text" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="AddToLibraryMenu.Text" xml:space="preserve">
    <value>Add to library</value>
  </data>
  <data name="Error_UnableToSyncPodcast" xml:space="preserve">
    <value>Error while synchronizing a podcast</value>
  </data>
  <data name="AddToMyPodcasts.Content" xml:space="preserve">
    <value>Add to library</value>
  </data>
  <data name="DeleteButton.Content" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="RefreshButton.Content" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="MarkAsUnplayedMenu.Text" xml:space="preserve">
    <value>Mark as unplayed</value>
  </data>
  <data name="DownloadMenu.Text" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="Downloaded.Text" xml:space="preserve">
    <value>downloaded</value>
  </data>
  <data name="AddToPlaylistMenu.Text" xml:space="preserve">
    <value>Add to playlist</value>
  </data>
  <data name="AddToPlaylistButton.Content" xml:space="preserve">
    <value>Add to playlist</value>
  </data>
  <data name="ExtendReason" xml:space="preserve">
    <value>Saving user data to the cloud</value>
  </data>
  <data name="DownloadLast.Text" xml:space="preserve">
    <value>Download latest episodes:</value>
  </data>
  <data name="DeleteDownloadMenu.Text" xml:space="preserve">
    <value>Delete download</value>
  </data>
  <data name="Error_UnableToDeleteDownload" xml:space="preserve">
    <value>Unable to delete download</value>
  </data>
  <data name="DeleteDownloadButton.Content" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Error_NoInternet" xml:space="preserve">
    <value>Internet connection not detected</value>
  </data>
  <data name="ConnectingMessage" xml:space="preserve">
    <value>Connecting to audio subsystem...</value>
  </data>
  <data name="LoadingMessage" xml:space="preserve">
    <value>Loading library...</value>
  </data>
  <data name="ParsingMessage" xml:space="preserve">
    <value>Parsing podcasts...</value>
  </data>
  <data name="StopDownloadButton.Content" xml:space="preserve">
    <value>Stop download</value>
  </data>
  <data name="StopDownloadMenu.Text" xml:space="preserve">
    <value>Stop download</value>
  </data>
  <data name="AutoPlay.Text" xml:space="preserve">
    <value>Autoplay:</value>
  </data>
  <data name="ForwardStep.Text" xml:space="preserve">
    <value>Forward step: (in seconds)</value>
  </data>
  <data name="RewindStep.Text" xml:space="preserve">
    <value>Rewind step: (in seconds)</value>
  </data>
  <data name="OPMLFiles" xml:space="preserve">
    <value>OPML files</value>
  </data>
  <data name="DownloadOnMetered.Text" xml:space="preserve">
    <value>Allow downloads on metered networks: </value>
  </data>
  <data name="NoCategory" xml:space="preserve">
    <value />
  </data>
  <data name="DeleteWhenPlayed.Text" xml:space="preserve">
    <value>Delete download when played:</value>
  </data>
  <data name="DownPodcastMenu.Text" xml:space="preserve">
    <value>Move down</value>
  </data>
  <data name="UpPodcastMenu.Text" xml:space="preserve">
    <value>Move up</value>
  </data>
  <data name="Unplayed" xml:space="preserve">
    <value>{0} unplayed podcast(s)</value>
  </data>
  <data name="DownloadsMenu.Label" xml:space="preserve">
    <value>Downloads</value>
  </data>
  <data name="FeedbackMenu.Label" xml:space="preserve">
    <value>Review</value>
  </data>
  <data name="DownloadsTitle.Text" xml:space="preserve">
    <value>Downloads</value>
  </data>
  <data name="PlayListMenu.Label" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="Downloads" xml:space="preserve">
    <value>download(s)</value>
  </data>
  <data name="PodcastsPlural" xml:space="preserve">
    <value>podcast(s)</value>
  </data>
  <data name="PlaylistTitle.Text" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="NotificationMessage" xml:space="preserve">
    <value>New episode: {0}</value>
  </data>
  <data name="Notifications.Text" xml:space="preserve">
    <value>Notifications:</value>
  </data>
  <data name="RefreshOnLoad.Text" xml:space="preserve">
    <value>Refresh on load:</value>
  </data>
  <data name="PlayMenu.Text" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="ExternalStorage.Text" xml:space="preserve">
    <value>External storage:</value>
  </data>
  <data name="PickedFolder.Text" xml:space="preserve">
    <value>Current folder:</value>
  </data>
  <data name="SystemAccentColor.Text" xml:space="preserve">
    <value>Use system accent color(*):</value>
  </data>
  <data name="AddAllToPlaylistMenu.Text" xml:space="preserve">
    <value>Add all unplayed to playlist</value>
  </data>
  <data name="AlreadyInLibrary.Text" xml:space="preserve">
    <value>Already in library</value>
  </data>
  <data name="AutomaticallyAddNewEpisodeToPlayList.Text" xml:space="preserve">
    <value>Automatically add new episodes to the playlist:</value>
  </data>
  <data name="DownloadsHeader.Header" xml:space="preserve">
    <value>Downloads</value>
  </data>
  <data name="GeneralHeader.Header" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="MediaHeader.Header" xml:space="preserve">
    <value>Media</value>
  </data>
  <data name="RefreshAll.Content" xml:space="preserve">
    <value>Refresh all podcasts</value>
  </data>
  <data name="DeleteOderThan.Text" xml:space="preserve">
    <value>Delete downloads older than (days):</value>
  </data>
  <data name="TimerHeader.Header" xml:space="preserve">
    <value>Sleep timer</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="ClearButton.Content" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="DownloadAllButton.Content" xml:space="preserve">
    <value>Download all</value>
  </data>
  <data name="ForcePushToCloud.Content" xml:space="preserve">
    <value>Send to OneDrive</value>
  </data>
  <data name="DarkTheme.Text" xml:space="preserve">
    <value>Dark theme(*): </value>
  </data>
  <data name="NeedRestart.Text" xml:space="preserve">
    <value>(*): Restart required</value>
  </data>
  <data name="SupportButton.Content" xml:space="preserve">
    <value>Send a tip</value>
  </data>
  <data name="SupportHeader.Header" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="SupportText.Text" xml:space="preserve">
    <value>Do you like Podcasts? If yes, you can consider supporting it by sending a tip to the developer.</value>
  </data>
  <data name="ThankYou" xml:space="preserve">
    <value>Thank you for your support!</value>
  </data>
  <data name="ImportButton.Content" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="SupportMaxButton.Content" xml:space="preserve">
    <value>Send a bigger tip</value>
  </data>
  <data name="CloudSync.Text" xml:space="preserve">
    <value>OneDrive Sync:</value>
  </data>
  <data name="ForceGetFromCloud.Content" xml:space="preserve">
    <value>Get from OneDrive</value>
  </data>
  <data name="CodeAndDesign.Text" xml:space="preserve">
    <value>Code &amp; Design:</value>
  </data>
  <data name="Logo.Text" xml:space="preserve">
    <value>Logo:</value>
  </data>
  <data name="PlayLink.Text" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="Filters.Text" xml:space="preserve">
    <value>Filter:</value>
  </data>
  <data name="UnplayedEpisodesAsc" xml:space="preserve">
    <value>Unplayed episodes (Asc.)</value>
  </data>
  <data name="UnplayedEpisodesDesc" xml:space="preserve">
    <value>Unplayed episodes (Desc.)</value>
  </data>
  <data name="Forever" xml:space="preserve">
    <value>Never</value>
  </data>
  <data name="VideoPlayback.Text" xml:space="preserve">
    <value>Video playback:</value>
  </data>
  <data name="FullscreenButton.Content" xml:space="preserve">
    <value>Full screen</value>
  </data>
  <data name="RotateButton.Content" xml:space="preserve">
    <value>Rotate</value>
  </data>
  <data name="VisibilityButton.Content" xml:space="preserve">
    <value>Switch</value>
  </data>
  <data name="AddAllToPlaylistMenuDesc.Text" xml:space="preserve">
    <value>Add all unplayed to playlist (Desc.)</value>
  </data>
  <data name="InvertSkipControls.Text" xml:space="preserve">
    <value>Invert skip controls behavior (Bluetooth):</value>
  </data>
  <data name="RemovedPlayedEpisodeFromPlayList.Text" xml:space="preserve">
    <value>Remove played episodes from playlist:</value>
  </data>
  <data name="AscButton.Content" xml:space="preserve">
    <value>Asc.</value>
  </data>
  <data name="DescButton.Content" xml:space="preserve">
    <value>Desc.</value>
  </data>
  <data name="ExportID.Content" xml:space="preserve">
    <value>Export ID</value>
  </data>
  <data name="ImportID.Content" xml:space="preserve">
    <value>Import ID</value>
  </data>
  <data name="MandatoryLocator" xml:space="preserve">
    <value>Podcasts requires geolocation permission to play podcasts in background. The location information will not be used.</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="ShareMenu.Text" xml:space="preserve">
    <value>Share</value>
  </data>
  <data name="Translations.Text" xml:space="preserve">
    <value>Translations:</value>
  </data>
  <data name="FeedbackButton.Content" xml:space="preserve">
    <value>Review</value>
  </data>
  <data name="StreamingIsDisabled" xml:space="preserve">
    <value>Metered connection detected. Streaming is disabled. You can turn it on in Options screen by enabling streaming on metered connections.</value>
  </data>
  <data name="DeleteAllButton.Content" xml:space="preserve">
    <value>Delete all</value>
  </data>
  <data name="Login.Text" xml:space="preserve">
    <value>Login:</value>
  </data>
  <data name="Password.Text" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="UrlText.Text" xml:space="preserve">
    <value>URL:</value>
  </data>
  <data name="StreamOnMetered.Text" xml:space="preserve">
    <value>Allow streaming on metered networks:</value>
  </data>
  <data name="PrivacyPolicy.Content" xml:space="preserve">
    <value>Privacy policy</value>
  </data>
  <data name="DownloadSlidableListItem.RightLabel" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="EpisodeSlidableListItem.RightLabel" xml:space="preserve">
    <value>Add to playlist</value>
  </data>
  <data name="PlaylistEntrySlidableListItem.RightLabel" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="PodcastSlidableListItem.LeftLabel" xml:space="preserve">
    <value>Add to playlist</value>
  </data>
  <data name="PodcastSlidableListItem.RightLabel" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DataFound" xml:space="preserve">
    <value>OneDrive Sync found updated data. Do you want to use them?</value>
  </data>
  <data name="BoolToPlayedUnplayed.FalseValue" xml:space="preserve">
    <value>Mark as played</value>
  </data>
  <data name="BoolToPlayedUnplayed.TrueValue" xml:space="preserve">
    <value>Mark as unplayed</value>
  </data>
  <data name="OneDriveCancel" xml:space="preserve">
    <value>No, turn off Sync</value>
  </data>
  <data name="OneDriveWarning" xml:space="preserve">
    <value>In order to synchronize your data over devices, Podcasts needs to access your OneDrive folder. Do you want to continue?</value>
  </data>
  <data name="OneDriveYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="AutoSyncOnClose.Text" xml:space="preserve">
    <value>Synchronize on close (*):</value>
  </data>
  <data name="AutoSyncHelp.Text" xml:space="preserve">
    <value>(*): OneDrive synchronization will be done after closing the app. If this option is disabled, you will have to do it manually using the following buttons.</value>
  </data>
</root>